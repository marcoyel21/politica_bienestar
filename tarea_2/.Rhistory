d<-read_csv("pobreza_18.csv")
#creo una variable del grupo 3 (mi objetivo)
d<-d%>%mutate(y_3=ifelse(d$cuadrantes==3,1,0))
d<- d%>%(select(y_3,tam_loc,rururb,tamhogesc,ic_rezedu,
ic_asalud,ic_segsoc,pea,jef_ss,
s_salud,isb_combus,ins_ali,ictpc,
carencias,ing_mon,ing_lab,ing_ren,ing_tra,ic_cv,ic_ali))
View(d)
d<- d%>%select(y_3,tam_loc,rururb,tamhogesc,ic_rezedu,
ic_asalud,ic_segsoc,pea,jef_ss,
s_salud,isb_combus,ins_ali,ictpc,
carencias,ing_mon,ing_lab,ing_ren,ing_tra,ic_cv,ic_ali)
d<-read_csv("pobreza_18.csv")
#creo una variable del grupo 3 (mi objetivo)
d<-d%>%mutate(y_3=ifelse(d$cuadrantes==3,1,0))
d<- d%>%select(factor,y_3,tam_loc,rururb,tamhogesc,ic_rezedu,
ic_asalud,ic_segsoc,pea,jef_ss,
s_salud,isb_combus,ins_ali,ictpc,
carencias,ing_mon,ing_lab,ing_ren,ing_tra,ic_cv,ic_ali)
d<-expandRows(d,'factor')
View(d)
d<-expandRows(d,'factor')
d<-na.omit(d)
d<-expandRows(d,'factor')
#importo los datos
d<-read_csv("pobreza_18.csv")%>%
mutate(y_3=ifelse(d$cuadrantes==3,1,0))%>%
select(factor,y_3,tam_loc,rururb,tamhogesc,ic_rezedu,
ic_asalud,ic_segsoc,pea,jef_ss,
s_salud,isb_combus,ins_ali,ictpc,
carencias,ing_mon,ing_lab,ing_ren,ing_tra,ic_cv,ic_ali)
#importo los datos
d<-read_csv("pobreza_18.csv")
#creo una variable del grupo 3 (mi objetivo)
d<-d%>%mutate(y_3=ifelse(d$cuadrantes==3,1,0))%>%
select(factor,y_3,tam_loc,rururb,tamhogesc,ic_rezedu,
ic_asalud,ic_segsoc,pea,jef_ss,
s_salud,isb_combus,ins_ali,ictpc,
carencias,ing_mon,ing_lab,ing_ren,ing_tra,ic_cv,ic_ali)
View(d)
# Metodología.
library(readr)
library(dplyr)
library(splitstackshape)
library(corrplot)
library(ggplot2)
library(viridis)
library(viridisLite)
library(hrbrthemes)
library(tidyr)
library(gapminder)
library(janitor)
library(vtree)
library(CGPfunctions)
library(ggridges)
library(arsenal)
library(table1)
library(kableExtra)
library(stargazer)
d<-read_csv("pobreza_18.csv")
ggplot(data=subset(d,!is.na(cuadrantes)),aes(x=as.factor(cuadrantes), y=ictpc, fill=as.factor(cuadrantes))) +
geom_boxplot() +
scale_fill_viridis(discrete = TRUE, alpha=0.6, option="A") +
theme_ipsum() +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
ggtitle("Ingreso per Cápita por Cuadrante") +
xlab("")+
ylim(0,7000)
knitr::opts_chunk$set(echo = FALSE)
#cargo librerias
library(dplyr)
library(ggplot2)
library(ggthemes)
library(kableExtra)
library(readr)
library(splitstackshape)
library(corrplot)
#importo los datos
data<-read_csv("pobreza_18.csv")
#creo una variable del grupo 3 (mi objetivo)
data<-data%>%mutate(y_3=ifelse(data$cuadrantes==3,1,0))
#Parte II
#Limpieza
# De todas estas columnas con Nas solo puedo salvar sa_dir
colSums(is.na(data))
data$inas_esc<-NULL
data$pea<-NULL
data$pam<-NULL
data$hli<-NULL
data$tot_iaad<-NULL
data$tot_iamen<-NULL
data$niv_ed<-NULL
data$ent<-NULL  #Entidad no muestra relación con nuestra variable objetivo
summary(factor(data$sa_dir))
data$sa_dir[is.na(data$sa_dir)] <- 0
data<-na.omit(data)
View(data)
knitr::opts_chunk$set(echo = FALSE)
#cargo librerias
library(dplyr)
library(ggplot2)
library(ggthemes)
library(kableExtra)
library(readr)
library(splitstackshape)
library(corrplot)
#importo los datos
data<-read_csv("pobreza_18.csv")
#creo una variable del grupo 3 (mi objetivo)
data<-data%>%mutate(y_3=ifelse(data$cuadrantes==3,1,0))
#Limpieza
# De todas estas columnas con Nas solo puedo salvar sa_dir
colSums(is.na(data))
data$inas_esc<-NULL
data$pea<-NULL
data$pam<-NULL
data$hli<-NULL
data$tot_iaad<-NULL
data$tot_iamen<-NULL
data$niv_ed<-NULL
data$ent<-NULL  #Entidad no muestra relación con nuestra variable objetivo
summary(factor(data$sa_dir))
data$sa_dir[is.na(data$sa_dir)] <- 0
data<-na.omit(data)
#filtro de acuerdo a lo que necesito
data<-data%>%mutate(y_3=ifelse(d$cuadrantes==3,1,0))%>%
select(factor,y_3,tam_loc,rururb,tamhogesc,ic_rezedu,
ic_asalud,ic_segsoc,pea,jef_ss,
s_salud,isb_combus,ins_ali,ictpc,
carencias,ing_mon,ing_lab,ing_ren,ing_tra,ic_cv,ic_ali)
knitr::opts_chunk$set(echo = FALSE)
#cargo librerias
library(dplyr)
library(ggplot2)
library(ggthemes)
library(kableExtra)
library(readr)
library(splitstackshape)
library(corrplot)
#importo los datos
data<-read_csv("pobreza_18.csv")
#creo una variable del grupo 3 (mi objetivo)
data<-data%>%mutate(y_3=ifelse(data$cuadrantes==3,1,0))
#Limpieza
# De todas estas columnas con Nas solo puedo salvar sa_dir
colSums(is.na(data))
data$inas_esc<-NULL
data$pea<-NULL
data$pam<-NULL
data$hli<-NULL
data$tot_iaad<-NULL
data$tot_iamen<-NULL
data$niv_ed<-NULL
data$ent<-NULL  #Entidad no muestra relación con nuestra variable objetivo
summary(factor(data$sa_dir))
data$sa_dir[is.na(data$sa_dir)] <- 0
data<-na.omit(data)
#filtro de acuerdo a lo que necesito
data<-data%>% select(factor,y_3,tam_loc,rururb,tamhogesc,ic_rezedu,
ic_asalud,ic_segsoc,pea,jef_ss,
s_salud,isb_combus,ins_ali,ictpc,
carencias,ing_mon,ing_lab,ing_ren,ing_tra,ic_cv,ic_ali)
knitr::opts_chunk$set(echo = FALSE)
#cargo librerias
library(dplyr)
library(ggplot2)
library(ggthemes)
library(kableExtra)
library(readr)
library(splitstackshape)
library(corrplot)
#importo los datos
data<-read_csv("pobreza_18.csv")
#creo una variable del grupo 3 (mi objetivo)
data<-data%>%mutate(y_3=ifelse(data$cuadrantes==3,1,0))
#Limpieza
# De todas estas columnas con Nas solo puedo salvar sa_dir
colSums(is.na(data))
data$inas_esc<-NULL
data$pea<-NULL
data$pam<-NULL
data$hli<-NULL
data$tot_iaad<-NULL
data$tot_iamen<-NULL
data$niv_ed<-NULL
data$ent<-NULL  #Entidad no muestra relación con nuestra variable objetivo
summary(factor(data$sa_dir))
data$sa_dir[is.na(data$sa_dir)] <- 0
data<-na.omit(data)
#filtro de acuerdo a lo que necesito
data<-data%>% select(factor,y_3,tam_loc,rururb,tamhogesc,ic_rezedu,
ic_asalud,ic_segsoc,jef_ss,
s_salud,isb_combus,ins_ali,ictpc,
carencias,ing_mon,ing_lab,ing_ren,ing_tra,ic_cv,ic_ali)
data<-expandRows(data,'factor')
knitr::opts_chunk$set(echo = FALSE)
#cargo librerias
library(dplyr)
library(ggplot2)
library(ggthemes)
library(kableExtra)
library(readr)
library(splitstackshape)
library(corrplot)
#importo los datos
data<-read_csv("pobreza_18.csv")
knitr::opts_chunk$set(echo = FALSE)
#cargo librerias
library(dplyr)
library(ggplot2)
library(ggthemes)
library(kableExtra)
library(readr)
library(splitstackshape)
library(corrplot)
#importo los datos
data<-read_csv("pobreza_18.csv")
#creo una variable del grupo 3 (mi objetivo)
data<-data%>%mutate(y_3=ifelse(data$cuadrantes==3,1,0))
#Limpieza
# De todas estas columnas con Nas solo puedo salvar sa_dir
colSums(is.na(data))
data$inas_esc<-NULL
data$pea<-NULL
data$pam<-NULL
data$hli<-NULL
data$tot_iaad<-NULL
data$tot_iamen<-NULL
data$niv_ed<-NULL
data$ent<-NULL  #Entidad no muestra relación con nuestra variable objetivo
data$sa_dir[is.na(data$sa_dir)] <- 0
data<-na.omit(data)
#filtro de acuerdo a lo que necesito
data<-data%>% select(factor,y_3,tam_loc,rururb,tamhogesc,ic_rezedu,
ic_asalud,ic_segsoc,jef_ss,
s_salud,isb_combus,ins_ali,ictpc,
carencias,ing_mon,ing_lab,ing_ren,ing_tra,ic_cv,ic_ali)
data<-expandRows(data,'factor')
knitr::opts_chunk$set(echo = FALSE)
#cargo librerias
library(dplyr)
library(ggplot2)
library(ggthemes)
library(kableExtra)
library(readr)
library(splitstackshape)
library(corrplot)
#importo los datos
data<-read_csv("pobreza_18.csv")
#creo una variable del grupo 3 (mi objetivo)
data<-data%>%mutate(y_3=ifelse(data$cuadrantes==3,1,0))
#Limpieza
# De todas estas columnas con Nas solo puedo salvar sa_dir
colSums(is.na(data))
data$inas_esc<-NULL
data$pea<-NULL
data$pam<-NULL
data$hli<-NULL
data$tot_iaad<-NULL
data$tot_iamen<-NULL
data$niv_ed<-NULL
data$ent<-NULL  #Entidad no muestra relación con nuestra variable objetivo
data$sa_dir[is.na(data$sa_dir)] <- 0
data<-na.omit(data)
#filtro de acuerdo a lo que necesito
data<-data%>% select(factor,y_3,tam_loc,rururb,ic_rezedu,
ic_asalud,ic_segsoc,jef_ss,
s_salud,isb_combus,ins_ali,ictpc,
carencias,ic_cv,ic_ali)
data<-expandRows(data,'factor')
knitr::opts_chunk$set(echo = FALSE)
#cargo librerias
library(dplyr)
library(ggplot2)
library(ggthemes)
library(kableExtra)
library(readr)
library(splitstackshape)
library(corrplot)
#importo los datos
data<-read_csv("pobreza_18.csv")
#creo una variable del grupo 3 (mi objetivo)
data<-data%>%mutate(y_3=ifelse(data$cuadrantes==3,1,0))
#Limpieza
# De todas estas columnas con Nas solo puedo salvar sa_dir
colSums(is.na(data))
data$inas_esc<-NULL
data$pea<-NULL
data$pam<-NULL
data$hli<-NULL
data$tot_iaad<-NULL
data$tot_iamen<-NULL
data$niv_ed<-NULL
data$ent<-NULL  #Entidad no muestra relación con nuestra variable objetivo
data$sa_dir[is.na(data$sa_dir)] <- 0
data<-na.omit(data)
#filtro de acuerdo a lo que necesito
data<-data%>% select(factor,y_3,tam_loc,rururb,ic_rezedu,
ic_asalud,ic_segsoc,jef_ss,
s_salud,isb_combus,ins_ali,ictpc,
carencias,ic_cv,ic_ali,plb,ss_dir,ic_sbv)
data<-expandRows(data,'factor')
library(dplyr)
#importo los datos
data<-read_csv("pobreza_18.csv")
#importo los datos
data<-read_csv("pobreza_18.csv")
#creo una variable del grupo 3 (mi objetivo)
data<-data%>%mutate(y_3=ifelse(data$cuadrantes==3,1,0))
# De todas estas columnas con Nas solo puedo salvar sa_dir
colSums(is.na(data))
data$inas_esc<-NULL
data$pea<-NULL
data$pam<-NULL
data$pam<-NULL
data$hli<-NULL
data$tot_iaad<-NULL
data$tot_iamen<-NULL
data$niv_ed<-NULL
data$ent<-NULL  #Entidad no muestra relación con nuestra variable objetivo
data$sa_dir[is.na(data$sa_dir)] <- 0
data<-na.omit(data)
#filtro de acuerdo a lo que necesito
data<-data%>% select(factor,y_3,tam_loc,rururb,ic_rezedu,
ic_asalud,ic_segsoc,jef_ss,
s_salud,isb_combus,ins_ali,ictpc,
carencias,ic_cv,ic_ali,plb,ss_dir,ic_sbv)
data<-expandRows(data,'factor')
library(dplyr)
#importo los datos
data<-read_csv("pobreza_18.csv")
library(dplyr)
library(readr)
#importo los datos
data<-read_csv("pobreza_18.csv")
#creo una variable del grupo 3 (mi objetivo)
data<-data%>%mutate(y_3=ifelse(data$cuadrantes==3,1,0))
#filtro de acuerdo a lo que necesito
data<-data%>% select(factor,y_3,tam_loc,rururb,ic_rezedu,
ic_asalud,ic_segsoc,jef_ss,
s_salud,isb_combus,ins_ali,ictpc,
carencias,ic_cv,ic_ali,plb,ss_dir,ic_sbv)
colSums(is.na(data))
View(data)
data<-na.omit(data)
colSums(is.na(data))
#filtro de acuerdo a lo que necesito
data$sa_dir<-NULL
data<-data%>% select(factor,y_3,tam_loc,rururb,ic_rezedu,
ic_asalud,ic_segsoc,jef_ss,
s_salud,isb_combus,ins_ali,ictpc,
carencias,ic_cv,ic_ali,plb,ss_dir,ic_sbv)
data<-na.omit(data)
colSums(is.na(data))
data<-expandRows(data,'factor')
library(splitstackshape)
data<-expandRows(data,'factor')
View(data)
library(dplyr)
library(readr)
library(splitstackshape)
#importo los datos
data<-read_csv("pobreza_18.csv")
#creo una variable del grupo 3 (mi objetivo)
data<-data%>%mutate(y_3=ifelse(data$cuadrantes==3,1,0))
#filtro de acuerdo a lo que necesito
data$sa_dir<-NULL
data<-data%>% select(factor,y_3,tam_loc,rururb,ic_rezedu,
ic_asalud,ic_segsoc,jef_ss,
s_salud,isb_combus,ins_ali,ictpc,
carencias,ic_cv,ic_ali,plb,ss_dir,ic_sbv)
data<-na.omit(data)
data<-expandRows(data,'factor')
rm(large_df, large_list, large_vector, temp_variables)
knitr::opts_chunk$set(echo = FALSE)
#cargo librerias
library(dplyr)
library(ggplot2)
library(ggthemes)
library(kableExtra)
library(readr)
library(splitstackshape)
library(corrplot)
#importo los datos
data<-read_csv("pobreza_18.csv")
#creo una variable del grupo 3 (mi objetivo)
data<-data%>%mutate(y_3=ifelse(data$cuadrantes==3,1,0))
#filtro de acuerdo a lo que necesito
data$sa_dir<-NULL
data<-data%>% select(factor,y_3,tam_loc,rururb,ic_rezedu,
ic_asalud,ic_segsoc,jef_ss,
s_salud,isb_combus,ins_ali,ictpc,
carencias,ic_cv,ic_ali,plb,ss_dir,ic_sbv)
data<-na.omit(data)
data<-expandRows(data,'factor')
library(dplyr)
library(readr)
library(splitstackshape)
#importo los datos
data<-read_csv("pobreza_18.csv")
#creo una variable del grupo 3 (mi objetivo)
data<-data%>%mutate(y_3=ifelse(data$cuadrantes==3,1,0))
#filtro de acuerdo a lo que necesito
data$sa_dir<-NULL
data<-data%>% select(factor,y_3,tam_loc,rururb,ic_rezedu,
ic_asalud,ic_segsoc,jef_ss,
s_salud,isb_combus,ins_ali,ictpc,
carencias,ic_cv,ic_ali,plb,ss_dir,ic_sbv)
data<-na.omit(data)
data<-expandRows(data,'factor')
sample<-data[sample(nrow(data), 100000), ]
write_csv("muestra_idd.csv")
View(sample)
write_csv(sample,"muestra_idd.csv")
knitr::opts_chunk$set(echo = FALSE)
#cargo librerias
library(dplyr)
library(ggplot2)
library(ggthemes)
library(kableExtra)
library(readr)
library(corrplot)
#importo los datos
data<-read_csv("muestra_idd.csv")
#Como la base de datos es muy grande, propongo una muestra aleatoria de tamaño n para "jugar"
logitMod <- glm(y_3 ~ ., data=data_filtered_s, family=binomial(link="logit"))
#Como la base de datos es muy grande, propongo una muestra aleatoria de tamaño n para "jugar"
logitMod <- glm(y_3 ~ ., data=data, family=binomial(link="logit"))
#Creo una función para generar matriz de confusión
confusion.glm <- function(data, model) {
prediction <- ifelse(predict(model, data, type='response') > 0.5, TRUE, FALSE)
confusion  <- table(prediction, as.logical(model$y))
confusion  <- cbind(confusion, c(1 - confusion[1,1]/(confusion[1,1]+confusion[2,1]), 1 - confusion[2,2]/(confusion[2,2]+confusion[1,2])))
confusion  <- as.data.frame(confusion)
names(confusion) <- c('FALSE', 'TRUE', 'class.error')
confusion
}
#Genero la matriz de confusión
confusion.glm(data_filtered_s,logitMod)
#Como la base de datos es muy grande, propongo una muestra aleatoria de tamaño n para "jugar"
logitMod <- glm(y_3 ~ ., data=data, family=binomial(link="logit"))
#Creo una función para generar matriz de confusión
confusion.glm <- function(data, model) {
prediction <- ifelse(predict(model, data, type='response') > 0.5, TRUE, FALSE)
confusion  <- table(prediction, as.logical(model$y))
confusion  <- cbind(confusion, c(1 - confusion[1,1]/(confusion[1,1]+confusion[2,1]), 1 - confusion[2,2]/(confusion[2,2]+confusion[1,2])))
confusion  <- as.data.frame(confusion)
names(confusion) <- c('FALSE', 'TRUE', 'class.error')
confusion
}
#Genero la matriz de confusión
confusion.glm(data,logitMod)
#Como la base de datos es muy grande, propongo una muestra aleatoria de tamaño n para "jugar"
logitMod <- glm(y_3 ~ ., data=data, family=binomial(link="logit"))
#Creo una función para generar matriz de confusión
confusion.glm <- function(data, model) {
prediction <- ifelse(predict(model, data, type='response') > 0.5, TRUE, FALSE)
confusion  <- table(prediction, as.logical(model$y))
confusion  <- cbind(confusion, c(1 - confusion[1,1]/(confusion[1,1]+confusion[2,1]), 1 - confusion[2,2]/(confusion[2,2]+confusion[1,2])))
confusion  <- as.data.frame(confusion)
names(confusion) <- c('FALSE', 'TRUE', 'class.error')
confusion
}
#Genero la matriz de confusión
confusion.glm(data,logitMod)
#Como la base de datos es muy grande, propongo una muestra aleatoria de tamaño n para "jugar"
logitMod <- glm(y_3 ~ ., data=data, family=binomial(link="logit"))
#Creo una función para generar matriz de confusión
confusion.glm <- function(data, model) {
prediction <- ifelse(predict(model, data, type='response') > 0.5, TRUE, FALSE)
confusion  <- table(prediction, as.logical(model$y))
confusion  <- cbind(confusion, c(1 - confusion[1,1]/(confusion[1,1]+confusion[2,1]), 1 - confusion[2,2]/(confusion[2,2]+confusion[1,2])))
confusion  <- as.data.frame(confusion)
names(confusion) <- c('FALSE', 'TRUE', 'class.error')
confusion
}
#Genero la matriz de confusión
confusion.glm(data,logitMod)
#Como la base de datos es muy grande, propongo una muestra aleatoria de tamaño n para "jugar"
data_filtered<-data%>%select(y_3,factor,
plb, s_salud, jef_ss,ss_dir,
rururb,ic_sbv,tam_loc ,ic_rezedu,
ic_asalud ,ic_cv,isb_combus,ic_ali)
#Como la base de datos es muy grande, propongo una muestra aleatoria de tamaño n para "jugar"
data_filtered<-sample%>%select(y_3,factor,
plb, s_salud, jef_ss,ss_dir,
rururb,ic_sbv,tam_loc ,ic_rezedu,
ic_asalud ,ic_cv,isb_combus,ic_ali)
#Como la base de datos es muy grande, propongo una muestra aleatoria de tamaño n para "jugar"
data_filtered<-data%>%select(y_3,factor,
plb, s_salud, jef_ss,ss_dir,
rururb,ic_sbv,tam_loc ,ic_rezedu,
ic_asalud ,ic_cv,isb_combus,ic_ali)
#Como la base de datos es muy grande, propongo una muestra aleatoria de tamaño n para "jugar"
data_filtered<-data%>%select(y_3,plb, s_salud, jef_ss,ss_dir,
rururb,ic_sbv,tam_loc ,ic_rezedu,
ic_asalud ,ic_cv,isb_combus,ic_ali)
logitMod <- glm(y_3 ~ ., data=data_filtered, family=binomial(link="logit"))
#Creo una función para generar matriz de confusión
confusion.glm <- function(data, model) {
prediction <- ifelse(predict(model, data, type='response') > 0.5, TRUE, FALSE)
confusion  <- table(prediction, as.logical(model$y))
confusion  <- cbind(confusion, c(1 - confusion[1,1]/(confusion[1,1]+confusion[2,1]), 1 - confusion[2,2]/(confusion[2,2]+confusion[1,2])))
confusion  <- as.data.frame(confusion)
names(confusion) <- c('FALSE', 'TRUE', 'class.error')
confusion
}
#Genero la matriz de confusión
confusion.glm(data_filtered,logitMod)
