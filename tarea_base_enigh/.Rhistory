ggplot(data=sample,  aes(x=gini, fill=region)) +
geom_histogram( alpha=0.6, position = 'identity')  +
theme_economist() +scale_color_gradientn(colours = rainbow(5))
ggplot(data=sample,  aes(x=gini, fill=region)) +
geom_histogram( alpha=0.6, position = 'identity') +scale_color_gradientn(colours = rainbow(5)) +
theme_economist()
ggplot(data=sample,  aes(x=gini, fill=region)) +
geom_histogram( alpha=0.6, position = 'identity',bins = 30) +scale_color_gradientn(colours = rainbow(5)) +
theme_economist()
ggplot(data=sample,  aes(x=gini, fill=region)) +
geom_histogram( alpha=0.6, position = 'identity',bins = 60) +scale_color_gradientn(colours = rainbow(5)) +
theme_economist()
ggplot(data=sample,  aes(x=gini, fill=region)) +
geom_histogram( alpha=0.6, position = 'identity',bins = 4000) +scale_color_gradientn(colours = rainbow(5)) +
theme_economist()
ggplot(data=sample,  aes(x=gini, fill=region)) +
geom_histogram( alpha=0.6, position = 'identity',bins = 20) +scale_color_gradientn(colours = rainbow(5)) +
theme_economist()
ggplot(data=sample,  aes(x=gini, fill=region)) +
geom_histogram( alpha=0.6, position = 'identity',bins = 40) +scale_color_gradientn(colours = rainbow(5)) +
theme_economist()
ggplot(data=sample,  aes(x=gini, fill=region)) +
geom_histogram( alpha=0.6, position = 'identity',bins = 30) +scale_color_gradientn(colours = rainbow(5)) +
theme_economist()
ggplot(data=sample,  aes(x=gini, fill=region)) +
geom_histogram( alpha=0.6, position = 'identity',bins = 30) +
geom_density(size = 1.5, color = "red") +scale_color_gradientn(colours = rainbow(5)) +
theme_economist()
ggplot(data=sample,  aes(x=gini, fill=region)) +
geom_histogram( alpha=0.6, position = 'identity',bins = 30) +
geom_density(size = 1.5) +scale_color_gradientn(colours = rainbow(5)) +
theme_economist()
ggplot(data=sample,  aes(x=gini, fill=region)) +
geom_histogram( alpha=0.6, position = 'identity',bins = 30) +scale_color_gradientn(colours = rainbow(5)) +
theme_economist()
ggplot(data=sample,  aes(x=gini, fill=region)) +
geom_histogram( alpha=0.6, position = 'identity',bins = 15) +scale_color_gradientn(colours = rainbow(5)) +
theme_economist()
ggplot(data=sample,  aes(x=gini, fill=region)) +
geom_histogram( alpha=0.6, position = 'identity',bins = 20) +scale_color_gradientn(colours = rainbow(5)) +
theme_economist()
ggplot(data=sample,  aes(x=gini, fill=region)) +
geom_histogram( alpha=0.6, position = 'identity',bins = 10) +scale_color_gradientn(colours = rainbow(5)) +
theme_economist()
ggplot(data=sample,  aes(x=gini, fill=region)) +
geom_histogram( alpha=0.6, position = 'identity',bins = 14) +scale_color_gradientn(colours = rainbow(5)) +
theme_economist()
ggplot(data=sample,  aes(x=gini, fill=region)) +
geom_histogram( alpha=0.4, position = 'identity',bins = 14) +scale_color_gradientn(colours = rainbow(5)) +
theme_economist()
ggplot(data=sample,  aes(x=gini, fill=region)) +
geom_histogram( alpha=0.2, position = 'identity',bins = 14) +scale_color_gradientn(colours = rainbow(5)) +
theme_economist()
ggplot(data=sample,  aes(x=gini, fill=region)) +
geom_histogram( alpha=0.8, position = 'identity',bins = 14) +scale_color_gradientn(colours = rainbow(5)) +
theme_economist()
ggplot(data=sample,  aes(x=gini, fill=region)) +
geom_histogram( alpha=0.5, position = 'identity',bins = 14) +scale_color_gradientn(colours = rainbow(5)) +
theme_economist()
View(sample)
lm(gini ~ factor(region), sample))
lm(gini ~ factor(region), sample)
model1<-lm(gini ~ factor(region), sample)
summary(model1)
library(stargazer)
m1<-lm(gini ~ factor(region), sample)
stargazer(m1, type="text",
dep.var.labels=c("Miles/(US) gallon","Fast car (=1)"),
covariate.labels=c("Gross horsepower","Rear axle ratio","Four foward gears",
"Five forward gears","Type of transmission (manual=1)"), out="models.txt")
library(stargazer)
m1<-lm(gini ~ factor(region), sample)
stargazer(m1, type="text",
dep.var.labels=c("Miles/(US) gallon","Fast car (=1)"))
library(stargazer)
m1<-lm(gini ~ factor(region), sample)
stargazer(m1, type="text",
dep.var.labels=c("Miles/(US) gallon","Fast car (=1)"),
covariate.labels=c("Asia-pacífico","Europa","Medio Oriente",
"Africa subsahariana")
library(stargazer)
m1<-lm(gini ~ factor(region), sample)
stargazer(m1, type="text",
dep.var.labels=c("Miles/(US) gallon","Fast car (=1)"),
covariate.labels=c("Asia-pacífico","Europa","Medio Oriente",
"Africa subsahariana","Type of transmission (manual=1)"), out="models.txt")
library(stargazer)
m1<-lm(gini ~ factor(region), sample)
stargazer(m1, type="text",
dep.var.labels=c("Miles/(US) gallon","Fast car (=1)"))
library(stargazer)
m1<-lm(gini ~ factor(region), sample)
stargazer(m1, type="text",
dep.var.labels=c("Miles/(US) gallon","Fast car (=1)"),
covariate.labels=c("Asia-pacífico","Europa","Medio Oriente",
"Africa subsahariana","Constante(América)"), out="models.txt")
library(stargazer)
m1<-lm(gini ~ factor(region), sample)
stargazer(m1, type="text",
dep.var.labels=c("Miles/(US) gallon","Fast car (=1)"),
covariate.labels=c("Asia-pacífico","Europa","Medio Oriente",
"Africa subsahariana","Constante(América)"), out="models.txt")
res <- as.data.frame(stat.desc(sample$gini))
rows<-c("Observaciones","Observaciones nulas","Observaciones con NAs","Valor mínimo", "Valos máximo","Rango","Suma","Mediana","Media","Error estandar de la media","Intervalo de confianza de la media(al 95%)", "Varianza","Desviación estandar","Coeficiente de variación")
row.names(res)<-rows
kable(round(res, 2),booktabs=T,col.names = c("Valor"))%>%
kable_styling(position = "center")
library(ggthemes) # Load
ggplot(data=sample, aes(gini)) +
geom_histogram()  +  ggtitle("Distribución de coeficientes Gini")+geom_vline(xintercept=37.52, linetype="dotted",size=1.5)+ theme_economist()
#importo los datos
data<-read_csv("clean.csv")
sample<-data%>%filter(year==2015)
View(sample)
library(stargazer)
m1<-lm(gini ~ factor(region), sample)
stargazer(m1, type="markdown",
dep.var.labels=c("Miles/(US) gallon","Fast car (=1)"),
covariate.labels=c("Asia-pacífico","Europa","Medio Oriente",
"Africa subsahariana","Constante(América)"), out="models.txt")
library(stargazer)
m1<-lm(gini ~ factor(region), sample)
stargazer(m1,
dep.var.labels=c("Miles/(US) gallon","Fast car (=1)"),
covariate.labels=c("Asia-pacífico","Europa","Medio Oriente",
"Africa subsahariana","Constante(América)"), out="models.txt")
library(stargazer)
m1<-lm(gini ~ factor(region), sample)
stargazer(m1, type="html",
dep.var.labels=c("Miles/(US) gallon","Fast car (=1)"),
covariate.labels=c("Asia-pacífico","Europa","Medio Oriente",
"Africa subsahariana","Constante(América)"), out="models.txt")
ggplot(data=sample,  aes(x=gini, fill=region)) +
geom_histogram( alpha=0.5, position = 'identity',bins = 14) +scale_color_gradientn(colours = rainbow(5)) +
theme_economist() +  ggtitle("Distribución de coeficientes Gini por región"
ggplot(data=sample,  aes(x=gini, fill=region)) +
geom_histogram( alpha=0.5, position = 'identity',bins = 14) +scale_color_gradientn(colours = rainbow(5)) +
theme_economist() +  ggtitle("Distribución de coeficientes Gini por región")
ggplot(data=sample,  aes(x=gini, fill=region)) +
geom_histogram( alpha=0.5, position = 'identity',bins = 14) +scale_color_gradientn(colours = rainbow(5)) +
theme_economist() +  ggtitle("Distribución de coeficientes Gini por región")
res <- as.data.frame(stat.desc(sample$gini))
rows<-c("Observaciones","Observaciones nulas","Observaciones con NAs","Valor mínimo", "Valos máximo","Rango","Suma","Mediana","Media","Error estandar de la media","Intervalo de confianza de la media(al 95%)", "Varianza","Desviación estandar","Coeficiente de variación")
row.names(res)<-rows
kable(round(res, 2),booktabs=T,col.names = c("Valor"),caption = "Estadísticas descriptivas")%>%
kable_styling(position = "center")
#Parte III: modelaje
install.packages("plm")
library(plm)
View(data)
data_2 <- left_join( wpt_2, clean,
by = c("countrycode"="countrycode", "year"="year"))  #Esta es la base de datos final
#Bases de datos del Penn
wpt<-read.dta13("https://www.rug.nl/ggdc/docs/pwt100.dta")
library(readstata13)
library(readxl)
library(readr)
library(dplyr)
wpt<-read.dta13("https://www.rug.nl/ggdc/docs/pwt100.dta")
#Base de datos del banco mundial
wb_gini<-read.csv("wb_gini.csv")
names(wb_gini)[length(names(wb_gini))]<-"gini"
# Parte II: Limpieza de datos
# En esta parte voy a crear una base de datos que tenga informacion completa de 1990 a 2015. (los años con información más completa)
# Para eso voy a filtrar por los países de los cuáles al menos cuento con 5 observaciones de gini,
filter<-as.data.frame(summary(factor(wb_gini$Code)))
a<-row.names(filter) #Este es el vector de países con más observaciones
wb_gini_2<-wb_gini%>% filter(Code %in% a)%>% filter(Year > 1989)
wpt_2<-wpt %>% select(country,countrycode,year,rgdpe,rgdpo,pop)%>% filter(countrycode %in% a)%>% filter(year > 1989)%>% filter(year < 2016)
# Junto los datasets
#data es los datos sin la imputación
data <- left_join( wpt_2, wb_gini_2,
by = c("countrycode" = "Code", "year"="Year"))
# IMPUTACION
# Realizo la imputación en excel (solamente agrego el promedio del gini entre años para los años faltantes):
write.csv(data,"data.csv")
#Ahora junto la base final,
clean<-read.csv("clean.csv")
data_2 <- left_join( wpt_2, clean,
by = c("countrycode"="countrycode", "year"="year"))  #Esta es la base de datos final
View(data_2)
View(data)
library(plm)
fatal_fe_mod <- plm( ln(rgdpe/lag(rgdpe))  ~ gini,
data = fata_2,
index = c("countrycode", "year"),
model = "within")
fatal_fe_mod <- plm( ln(rgdpe/lag(rgdpe))  ~ gini,
data = data_2,
index = c("countrycode", "year"),
model = "within")
fatal_fe_mod <- plm( ln(rgdpe)  ~ gini,
data = data_2,
index = c("countrycode", "year"),
model = "within")
fatal_fe_mod <- plm( rgdpe  ~ gini,
data = data_2,
index = c("countrycode", "year"),
model = "within")
# Modelo 3: Efectos aleatorios
fatal_fe_mod
# Modelo 3: Efectos aleatorios
ln(8)
fatal_fe_mod <- plm( log(rgdpe)  ~ gini,
data = data_2,
index = c("countrycode", "year"),
model = "within")
# Modelo 3: Efectos aleatorios
fatal_fe_mod
fatal_fe_mod <- plm( log(rgdpe/lag(rgdpe))  ~ gini,
data = data_2,
index = c("countrycode", "year"),
model = "within")
# Modelo 3: Efectos aleatorios
fatal_fe_mod
efectos_fijos <- plm( log(rgdpe/lag(rgdpe))  ~ gini,
data = data_2,
index = c("countrycode", "year"),
model = "within")
# Modelo 3: Efectos aleatorios
efectos_fijos
# Modelo 3: Efectos aleatorios
summary(efectos_fijos)
data_2<- data_2%>%
group_by(countrycode) %>%
mutate(growth = c(NA,diff(rgdpe))/lag(rgdpe, 1))
View(data_2)
mean(data_2$growth)
mean(data_2$growth,na.rm = T)
efectos_fijos <- plm( growth  ~ gini,
data = data_2,
index = c("countrycode", "year"),
model = "within")
# Modelo 3: Efectos aleatorios
summary(efectos_fijos)
efectos_fijos_2 <- plm( growth  ~ gini+region,
data = data_2,
index = c("countrycode", "year"),
model = "within")
summary(efectos_fijos_2)
efectos_fijos_2 <- plm( growth  ~ gini+region,
data = data_2,
index = c("countrycode", "year"),
model = "within")
summary(efectos_fijos)
summary(efectos_fijos_2)
efectos_fijos_2 <- plm( growth  ~ region,
data = data_2,
index = c("countrycode", "year"),
model = "within")
efectos_fijos_2 <- plm( growth  ~ gini,
data = data_2,
index = c("countrycode", "year"),
model = "within",
effect = "twoways")
summary(efectos_fijos)
summary(efectos_fijos_2)
efectos_fijos_2 <- plm( growth  ~ gini+region,
data = data_2,
index = c("countrycode", "year"),
model = "within",
effect = "twoways")
summary(efectos_fijos)
summary(efectos_fijos_2)
efectos_fijos_2 <- plm( growth  ~ gini,
data = data_2,
index = c("countrycode", "year"),
model = "within",
effect = "twoways")
summary(efectos_fijos)
summary(efectos_fijos_2)
efectos_fijos_basico <- plm( growth  ~ gini,
data = data_2,
index = c("countrycode", "year"),
model = "within",
effect = "nested")
efectos_fijos_tiempo <- plm( growth  ~ gini,
data = data_2,
index = c("countrycode", "year"),
model = "time")
efectos_fijos_pais <- plm( growth  ~ gini,
data = data_2,
index = c("countrycode", "year"),
model = "within",
effect = "individual")
efectos_fijos_ambos <- plm( growth  ~ gini,
data = data_2,
index = c("countrycode", "year"),
model = "within",
effect = "twoways")
efectos_fijos_tiempo <- plm( growth  ~ gini,
data = data_2,
index = c("countrycode", "year"),
model = "time")
efectos_fijos_tiempo <- plm( growth  ~ gini,
data = data_2,
index = c("countrycode", "year"),
model = "within",
effect = "time")
efectos_fijos_basico <- plm( growth  ~ gini,
data = data_2,
index = c("countrycode", "year"),
model = "within",
effect = "nested")
efectos_fijos_basico <- plm( growth  ~ gini,
data = data_2,
index = c("countrycode", "year"),
model = "within")
summary(efectos_fijos_basico)
summary(efectos_fijos_pais)
summary(efectos_fijos_ambos)
summary(efectos_fijos_tiempo)
summary(efectos_fijos_tiempo)
summary(efectos_fijos_pais)
summary(efectos_fijos_ambos)
efectos_fijos_region <- plm( growth  ~ gini+region,
data = data_2,
index = c("countrycode", "year"),
model = "within",
effect = "individual")
summary(efectos_fijos_region)
efectos_fijos_region_2 <- plm( growth  ~ gini+region,
data = data_2,
index = c("countrycode", "year"),
model = "within",
effect = "twoways")
summary(efectos_fijos_region_2)
efectos_fijos_region_2 <- plm( growth  ~ gini+region,
data = data_2,
index = c("countrycode", "year"),
model = "within",
effect = "time")
summary(efectos_fijos_region_2)
library(readstata13)
library(readxl)
library(readr)
library(dplyr)
library(plm)
#Bases de datos del Penn
wpt<-read.dta13("https://www.rug.nl/ggdc/docs/pwt100.dta")
#Base de datos del banco mundial
wb_gini<-read.csv("wb_gini.csv")
names(wb_gini)[length(names(wb_gini))]<-"gini"
# Parte II: Limpieza de datos
# En esta parte voy a crear una base de datos que tenga informacion completa de 1990 a 2015. (los años con información más completa)
# Para eso voy a filtrar por los países de los cuáles al menos cuento con 5 observaciones de gini,
filter<-as.data.frame(summary(factor(wb_gini$Code)))
a<-row.names(filter) #Este es el vector de países con más observaciones
wb_gini_2<-wb_gini%>% filter(Code %in% a)%>% filter(Year > 1989)
wpt_2<-wpt %>% select(country,countrycode,year,rgdpe,rgdpo,pop)%>% filter(countrycode %in% a)%>% filter(year > 1989)%>% filter(year < 2016)
# Junto los datasets
#data es los datos sin la imputación
data <- left_join( wpt_2, wb_gini_2,
by = c("countrycode" = "Code", "year"="Year"))
# IMPUTACION
# Realizo la imputación en excel (solamente agrego el promedio del gini entre años para los años faltantes):
write.csv(data,"data.csv")
#Ahora junto la base final,
clean<-read.csv("clean.csv")
data_2 <- left_join( wpt_2, clean,
by = c("countrycode"="countrycode", "year"="year"))  #Esta es la base de datos final
data_2<- data_2%>%
group_by(countrycode) %>%
mutate(growth = c(NA,diff(rgdpe))/lag(rgdpe, 1))
efectos_fijos_region_2 <- plm( growth  ~ gini+region,
data = data_2,
index = c("countrycode", "year"),
model = "within",
effect = "nested")
efectos_fijos_region_2 <- plm( growth  ~ gini+region,
data = data_2,
index = c("countrycode", "year"),
model = "within")
summary(efectos_fijos_region_2)
efectos_fijos_region_2 <- plm( growth  ~ gini+region,
data = data_2,
index = c("countrycode", "year"),
model = "within",
effect = "time")
summary(efectos_fijos_region_2)
#Bases de datos del Penn
data<-read.dta13("cigarretdata.dta")
library(readstata13)
library(readxl)
library(readr)
library(dplyr)
#Bases de datos del Penn
data<-read.dta13("cigarretdata.dta")
View(data)
efectos_fijos_tiempo <- plm( lnc  ~ lnp+lnrpn+lnrdi,
data = data,
index = c("state", "yr"),
model = "within",
effect = "time")
library(plm)
efectos_fijos_tiempo <- plm( lnc  ~ lnp+lnrpn+lnrdi,
data = data,
index = c("state", "yr"),
model = "within",
effect = "time")
efectos_fijos_tiempo <- plm( lnc  ~ lnrp+lnrpn+lnrdi,
data = data,
index = c("state", "yr"),
model = "within",
effect = "time")
summary(efectos_fijos_tiempo)
efectos_fijos_tiempo <- plm( lnc  ~ lnrp+lnrpn+lnrdi,
data = data,
index = c("state", "yr"),
model = "within")
summary(efectos_fijos_tiempo)
data<-data %>% mutate(lnpop16=log(pop16))
A <- plm( lnc  ~ lnrp+lnrpn+lnrdi,
data = data,
index = c("state", "yr"),
model = "within")
B <- plm( lnc  ~ lnrp+lnrpn+lnrdi,
data = data,
index = c("state", "yr"),
model = "within",
effect = "time")
C <- plm( lnc  ~ lnrp+lnrpn+lnrdi,
data = data,
index = c("state", "yr"),
model = "within",
effect = "twoways")
A <- plm( lnc  ~ lnrp+lnrpn+lnrdi,
data = data,
index = c("state", "yr"),
model = "within")
B <- plm( lnc  ~ lnrp+lnrpn+lnrdi,
data = data,
index = c("state", "yr"),
model = "within",
effect = "time")
C <- plm( lnc  ~ lnrp+lnrpn+lnrdi+lnpop16,
data = data,
index = c("state", "yr"),
model = "within",
effect = "twoways")
ols_A <- lm(lnc  ~ lnrp+lnrpn+lnrdi,
data = data)
#Modelo 1: OLS
ols_A <- lm(lnc  ~ lnrp+lnrpn+lnrdi,
data = data)
ols_B <- lm(lnc  ~ lnrp+lnrpn+lnrdi+factor(yr),
data = data)
ols_C <- lm(lnc  ~ lnrp+lnrpn+lnrdi+factor(yr)+factor(state),
data = data)
C <- plm( lnc  ~ lnrp+lnrpn+lnrdi,
data = data,
index = c("state", "yr"),
model = "within",
effect = "twoways")
C
summary(C)
D <- plm( lnc-lag(lnc)  ~ lnrp+lnrpn+lnrdi,
data = data,
index = c("state", "yr"),
model = "within",
effect = "twoways")
D
D <- plm( lnc  ~ lag(lnc)+lnrp+lnrpn+lnrdi,
data = data,
index = c("state", "yr"),
model = "within",
effect = "twoways")
D
D <- plm( lnc  ~ lag(lnc)+lnrp+lnrpn+lnrdi,
data = data,
index = c("state", "yr"),
model = "within",
effect = "time")
D
D <- plm( lnc  ~ lag(lnc)+lnrp+lnrpn+lnrdi,
data = data,
index = c("state", "yr"),
model = "random",
effect = "time")
D
D <- plm( lnc  ~ lag(lnc)+lnrp+lnrpn+lnrdi,
data = data,
index = c("state", "yr"),
model = "random",
effect = "twoways")
D
knitr::opts_chunk$set(echo = TRUE)
library(readstata13)
library(stargazer)
library(plm)
library(dplyr)
#Bases de datos del Penn
data<-read.dta13("cigarretdata.dta")
data<-data %>% mutate(lnpop16=log(pop16))
#Modelo 1: OLS
ols_A <- lm(lnc  ~ lnrp+lnrpn+lnrdi,
data = data)
ols_with_D <- lm(lnc  ~ lnrp+lnrpn+lnrdi+factor(yr),
data = data)
ols_Z_and_D <- lm(lnc  ~ lnrp+lnrpn+lnrdi+factor(yr)+factor(state),
data = data)
within <- plm( lnc  ~ lnrp+lnrpn+lnrdi,
data = data,
index = c("state", "yr"),
model = "within",
effect = "twoways")
random <- plm( lnc  ~ lag(lnc)+lnrp+lnrpn+lnrdi,
data = data,
index = c("state", "yr"),
model = "random",
effect = "twoways")
stargazer(ols_A, ols_with_D, ols_Z_and_D, within, random, title="Results", align=TRUE)
